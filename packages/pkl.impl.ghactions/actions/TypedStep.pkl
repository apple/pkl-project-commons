//===----------------------------------------------------------------------===//
// Copyright Â© 2025 Apple Inc. and the Pkl project authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//===----------------------------------------------------------------------===//
abstract module pkl.impl.ghactions.actions.TypedStep

import "@gha/Workflow.pkl"

/// A name for your step to display on GitHub.
name: String?

/// A unique identifier for the step.
///
/// You can use the [id] to reference the step in contexts.
///
/// For more information, see [Contexts reference](https://docs.github.com/en/actions/reference/workflows-and-actions/contexts).
id: String?

/// You can use the if conditional to prevent a step from running unless a condition is met.
///
/// You can use any supported context and expression to create a conditional.
/// For more information on which contexts are supported in this key, see Contexts reference.
///
/// When you use expressions in an if conditional, you can, optionally, omit the `${{ }}` expression syntax because
/// GitHub Actions automatically evaluates the if conditional as an expression.
/// However, this exception does not apply everywhere.
///
/// For more information, see Evaluate expressions in workflows and actions.
@SourceCode { language = "GithubExpressionLanguage" }
`if`: String?

/// The maximum number of minutes to run the step before killing the process.
///
/// Fractional values are not supported.
/// timeout-minutes must be a positive integer.
`timeout-minutes`: Int(isPositive)?

/// Sets variables for steps to use in the runner environment.
/// You can also set variables for the entire workflow or a job.
/// For more information, see [module.env] and [BaseJob.env].
///
/// When more than one environment variable is defined with the same name, GitHub uses the most specific variable.
/// For example, an environment variable defined in a step will override job and workflow environment variables with
/// the same name, while the step executes.
/// An environment variable defined for a job will override a workflow variable with the same name, while the job executes.
///
/// Public actions may specify expected variables in the README file.
/// If you are setting a secret or sensitive value, such as a password or token, you must set secrets using the
/// secrets context.
/// For more information, see [Contexts reference](https://docs.github.com/en/actions/reference/workflows-and-actions/contexts).
env: Workflow.EnvironmentVariables?

/// Using the working-directory keyword, you can specify the working directory of where to run the command.
///
/// Alternatively, you can specify a default working directory for all run steps in a job, or for all run steps in the
/// entire workflow.
/// For more information, see `defaults.run.working-directory` and `jobs.<job_id>.defaults.run.working-directory`.
///
/// You can also use a run step to run a script.
/// For more information, see [Adding scripts to your workflow](https://docs.github.com/en/actions/how-tos/write-workflows/choose-what-workflows-do/add-scripts).
///
/// Docs: <https://docs.github.com/en/actions/reference/workflows-and-actions/workflow-syntax#jobsjob_idstepsworking-directory>
`working-directory`: String?

/// You can override the default shell settings in the runner's operating system and the job's default using the shell keyword.
///
/// You can use built-in shell keywords, or you can define a custom set of shell options.
/// The shell command that is run internally executes a temporary file that contains the commands specified in the run keyword.
///
/// Docs: <https://docs.github.com/en/actions/reference/workflows-and-actions/workflow-syntax#jobsjob_idstepsshell>
shell: Workflow.Shell?

fixed uses: String?

/// The inputs for this action.
abstract with: Typed?

/// The resulting step output.
hidden fixed step: Workflow.Step = new {
  ...module.toMap().remove("with").toDynamic()
  with {
    for (key, value in module.with.toMap()) {
      when (value != null) {
        [key] = value
      }
    }
  }
}
